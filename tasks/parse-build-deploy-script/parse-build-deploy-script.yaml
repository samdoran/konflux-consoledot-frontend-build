---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: parse-build-deploy-script
spec:
  description: >-
    Tekton task to get the env variables of a workspace using build_deploy.sh
  volumes:
    - name: workdir
      emptyDir: {}
  params:
    - default: "source"
      description: directory in the `output` workspace to clone the repo into.
      name: subdirectory
      type: string
    - name: path-context
      default: ""
      description: path context directory inside the repo
      type: string
    - name: source_artifact
      type: string

  results:
    - name: component
      type: string
      description: variable for the component's name
    - name: image
      type: string
      description: variable for the component's image
    - name: node-build-version
      type: string
      description: variable for node's version
    - name: quay-expire-time
      type: string
      description: variable for quay's expiry time
    - name: npm-build-script
      type: string
      description: npm script to run at build time
    - name: yarn-build-script
      type: string
      description: yarn script to run at build time
    - name: route-path
      type: string
      description: path for the app to be stored
    - name: beta-route-path
      type: string
      description: path for the beta app to be stored
    - name: preview-route-path
      type: string
      description: path for the preview app to be stored
    - name: ci-root
      type: string
      description: root of the ci.sh script
    - name: server-name
      type: string
      description: name of the server. If empty, same as the app name
    - name: dist-folder
      type: string
      description: directory where the app.info.json will be written
  steps:
    - name: use-trusted-artifact
      image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:a390d28f69d61ab38aadf78b7c9b21ed09b79687bddae4cf1d02616bef5d7da7
      args:
        - use
        - $(params.source_artifact)=/var/workdir/source

    - name: parse-build-deploy-script
      image: registry.access.redhat.com/ubi9/ubi-minimal:9.3-1361.1699548032
      volumeMounts:
        - mountPath: /var/workdir
          name: workdir
      script: |
        #!/bin/bash
        set -ex

        ls /var/workdir
        mount

        # function to convert variables from kebab-case to SCREAM_SNAKE_CASE
        function convert_var_name() {
          echo "$1" | tr '-' '_' | tr '[:lower:]' '[:upper:]'
        }

        cd /var/workdir/$(params.subdirectory)\
        /$(params.path-context)

        script_path=build_deploy.sh

        results="component image node-build-version quay-expire-time
        npm-build-script yarn-build-script route-path beta-route-path
        preview-route-path ci-root server-name dist-folder"

        for result in $results
        do
          RESULT=$(convert_var_name "$result")
          result_value="$(grep "$RESULT=" $script_path | awk -F= '{print $2}')"
          echo -n "$result_value" | tee /workspace/$result
        done

        # I can't write to results from a for using a variable
        cat /workspace/component | tee $(results.component.path)
        cat /workspace/image | tee $(results.image.path)
        cat /workspace/ci-root | tee $(results.ci-root.path)
        cat /workspace/server-name | tee $(results.server-name.path)
        cat /workspace/dist-folder | tee $(results.dist-folder.path)
        cat /workspace/node-build-version \
        | tee $(results.node-build-version.path)
        cat /workspace/quay-expire-time \
        | tee $(results.quay-expire-time.path)
        cat /workspace/npm-build-script \
        | tee $(results.npm-build-script.path)
        cat /workspace/yarn-build-script \
        | tee $(results.yarn-build-script.path)
        cat /workspace/route-path \
        | tee $(results.route-path.path)
        cat /workspace/beta-route-path \
        | tee $(results.beta-route-path.path)
        cat /workspace/preview-route-path \
        | tee $(results.preview-route-path.path)
